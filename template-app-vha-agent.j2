{#-#########################################################################-#}
{#- HELPERS -#}
{#-#########################################################################-#}

{%- set name = name|default('VHA Agent') -%}

{%- set master = 'vha_agent.stats["{$VHA_AGENT.LOCATIONS}"]' -%}

{%- macro discovery_rule(rule, items, triggers, graphs) -%}
    <discovery_rule>
        <name>{{ rule.name|e }}</name>
        <type>7</type>
        <snmp_community/>
        <snmp_oid/>
        <key>{{ rule.key|e }}</key>
        <delay>{$VHA_AGENT.LLD_UPDATE_INTERVAL:{{ rule.context }}}</delay>
        <status>0</status>
        <allowed_hosts/>
        <snmpv3_contextname/>
        <snmpv3_securityname/>
        <snmpv3_securitylevel>0</snmpv3_securitylevel>
        <snmpv3_authprotocol>0</snmpv3_authprotocol>
        <snmpv3_authpassphrase/>
        <snmpv3_privprotocol>0</snmpv3_privprotocol>
        <snmpv3_privpassphrase/>
        <params/>
        <ipmi_sensor/>
        <authtype>0</authtype>
        <username/>
        <password/>
        <publickey/>
        <privatekey/>
        <port/>
        <filter>
            <evaltype>0</evaltype>
            <formula/>
            <conditions/>
        </filter>
        <lifetime>{$VHA_AGENT.LLD_KEEP_LOST_RESOURCES_PERIOD:{{ rule.context }}}</lifetime>
        <description/>
        <host_prototypes/>
        <jmx_endpoint/>
        <timeout>3s</timeout>
        <url/>
        <query_fields/>
        <posts/>
        <status_codes>200</status_codes>
        <follow_redirects>1</follow_redirects>
        <post_type>0</post_type>
        <http_proxy/>
        <headers/>
        <retrieve_mode>0</retrieve_mode>
        <request_method>0</request_method>
        <allow_traps>0</allow_traps>
        <ssl_cert_file/>
        <ssl_key_file/>
        <ssl_key_password/>
        <verify_peer>0</verify_peer>
        <verify_host>0</verify_host>
        {% if version == '4.2' %}
            <lld_macro_paths/>
            <preprocessing/>
            <master_item/>
        {% endif %}
        <item_prototypes>
            {% for item in items %}
                <item_prototype>
                    <name>VHA Agent[{{ '{#' }}LOCATION}] - {{ item.name|e }}</name>
                    <type>{{ item.type }}</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>{{ item.key|e }}</key>
                    {% if 'delay' in item and item.delay %}
                        <delay>{$VHA_AGENT.ITEM_UPDATE_INTERVAL:{{ item.context }}}</delay>
                    {% else %}
                        <delay>0</delay>
                    {% endif %}
                    <history>{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD:{{ item.context }}}</history>
                    {% if 'trends' in item and not item.trends %}
                        <trends>0</trends>
                    {% else %}
                        <trends>{$VHA_AGENT.ITEM_TREND_STORAGE_PERIOD:{{ item.context }}}</trends>
                    {% endif %}
                    <status>0</status>
                    <value_type>{{ item.value_type }}</value_type>
                    <allowed_hosts/>
                    <units>{{ item.units|default('')|e }}</units>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>{{ item.params|default('')|e }}</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>VHA Agent</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    {% if 'master_item_key' in item %}
                        <master_item>
                            <key>{{ item.master_item_key|e }}</key>
                        </master_item>
                    {% else %}
                        <master_item/>
                    {% endif %}
                    {% if 'preprocessing' in item %}
                        <preprocessing>
                            {% for step in item.preprocessing %}
                                <step>
                                    <type>{{ step.type }}</type>
                                    <params>{{ step.params|default('')|e }}</params>
                                    {% if version == '4.2' %}
                                        <error_handler>{{ step.error_handler|default(0) }}</error_handler>
                                        <error_handler_params/>
                                    {% endif %}
                                </step>
                            {% endfor %}
                        </preprocessing>
                    {% else %}
                        <preprocessing/>
                    {% endif %}
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <application_prototypes/>
                </item_prototype>
            {% endfor %}
        </item_prototypes>
        <trigger_prototypes>
            {% for trigger in triggers %}
                <trigger_prototype>
                    <expression>{{ trigger.expression|e }}</expression>
                    <recovery_mode>0</recovery_mode>
                    <recovery_expression/>
                    <name>VHA Agent[{{ '{#' }}LOCATION}] {{ trigger.name|e }}</name>
                    <correlation_mode>0</correlation_mode>
                    <correlation_tag/>
                    <url/>
                    <status>0</status>
                    <priority>{{ trigger.priority }}</priority>
                    <description/>
                    <type>0</type>
                    <manual_close>0</manual_close>
                    <dependencies/>
                    <tags/>
                </trigger_prototype>
            {% endfor %}
        </trigger_prototypes>
        <graph_prototypes>
            {% for graph in graphs %}
                <graph_prototype>
                    <name>VHA Agent[{{ '{#' }}LOCATION}] &gt; {{ graph.name|e }}</name>
                    <width>900</width>
                    <height>200</height>
                    <yaxismin>0.0000</yaxismin>
                    <yaxismax>100.0000</yaxismax>
                    <show_work_period>1</show_work_period>
                    <show_triggers>1</show_triggers>
                    <type>{{ graph.type|default(0) }}</type>
                    <show_legend>1</show_legend>
                    <show_3d>0</show_3d>
                    <percent_left>0.0000</percent_left>
                    <percent_right>0.0000</percent_right>
                    <ymin_type_1>0</ymin_type_1>
                    <ymax_type_1>0</ymax_type_1>
                    <ymin_item_1>0</ymin_item_1>
                    <ymax_item_1>0</ymax_item_1>
                    <graph_items>
                        {% for gitem in graph['items'] %}
                            <graph_item>
                                <sortorder>{{ loop.index0 }}</sortorder>
                                <drawtype>{{ gitem.drawtype|default(0) }}</drawtype>
                                <color>{{ gitem.color }}</color>
                                <yaxisside>{{ gitem.yaxisside|default(0) }}</yaxisside>
                                <calc_fnc>{{ gitem.calc_fnc|default(2) }}</calc_fnc>
                                <type>0</type>
                                <item>
                                    <host>Template App {{ name }}</host>
                                    <key>{{ gitem.key|e }}</key>
                                </item>
                            </graph_item>
                        {% endfor %}
                    </graph_items>
                </graph_prototype>
            {% endfor %}
        </graph_prototypes>
    </discovery_rule>
{%- endmacro -%}

{#-#########################################################################-#}
{#- MAIN -#}
{#-#########################################################################-#}

<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>{{ version }}</version>
    <date>2018-10-26T13:42:30Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App {{ name }}</template>
            <name>Template App {{ name }}</name>
            <description/>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>VHA Agent</name>
                </application>
            </applications>
            <templates/>
            <screens/>
            <httptests/>
            {% if version == '4.2' %}
                <tags>
                    <tag>
                        <tag>App</tag>
                        <value>VHA Agent</value>
                    </tag>
                </tags>
            {% endif %}

            {#-#############################################################-#}
            {#- ITEMS -#}
            {#-#############################################################-#}

            <items>
                {% for item in [
                        {
                            'name': 'stats',
                            'key': master,
                            'context': 'stats',
                            'trends': false,
                            'value_type': 4,
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[vha-agent]',
                            'context': 'proc.num-vha-agent',
                            'value_type': 3,
                        },
                    ] %}
                    <item>
                        <name>VHA Agent - {{ item.name|e }}</name>
                        <type>7</type>
                        <snmp_community/>
                        <snmp_oid/>
                        <key>{{ item.key|e }}</key>
                        <delay>{$VHA_AGENT.ITEM_UPDATE_INTERVAL:{{ item.context }}}</delay>
                        <history>{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD:{{ item.context }}}</history>
                        {% if 'trends' in item and not item.trends %}
                            <trends>0</trends>
                        {% else %}
                            <trends>{$VHA_AGENT.ITEM_TREND_STORAGE_PERIOD:{{ item.context }}}</trends>
                        {% endif %}
                        <status>0</status>
                        <value_type>{{ item.value_type }}</value_type>
                        <allowed_hosts/>
                        <units/>
                        <snmpv3_contextname/>
                        <snmpv3_securityname/>
                        <snmpv3_securitylevel>0</snmpv3_securitylevel>
                        <snmpv3_authprotocol>0</snmpv3_authprotocol>
                        <snmpv3_authpassphrase/>
                        <snmpv3_privprotocol>0</snmpv3_privprotocol>
                        <snmpv3_privpassphrase/>
                        <params/>
                        <ipmi_sensor/>
                        <authtype>0</authtype>
                        <username/>
                        <password/>
                        <publickey/>
                        <privatekey/>
                        <port/>
                        <description/>
                        <inventory_link>0</inventory_link>
                        <applications>
                            <application>
                                <name>VHA Agent</name>
                            </application>
                        </applications>
                        <valuemap/>
                        <logtimefmt/>
                        <preprocessing/>
                        <jmx_endpoint/>
                        <timeout>3s</timeout>
                        <url/>
                        <query_fields/>
                        <posts/>
                        <status_codes>200</status_codes>
                        <follow_redirects>1</follow_redirects>
                        <post_type>0</post_type>
                        <http_proxy/>
                        <headers/>
                        <retrieve_mode>0</retrieve_mode>
                        <request_method>0</request_method>
                        <output_format>0</output_format>
                        <allow_traps>0</allow_traps>
                        <ssl_cert_file/>
                        <ssl_key_file/>
                        <ssl_key_password/>
                        <verify_peer>0</verify_peer>
                        <verify_host>0</verify_host>
                        <master_item/>
                    </item>
                {% endfor %}
            </items>

            {#-#############################################################-#}
            {#- DISCOVERY RULES -#}
            {#-#############################################################-#}

            <discovery_rules>
                {#-#########################################################-#}
                {#- ITEMS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Items discovery',
                        'key': 'vha_agent.discovery["{$VHA_AGENT.LOCATIONS}","items"]',
                        'context': 'items',
                    },
                    [
                        {
                            'name': 'n_backlog (total length of all waiting lists of requests)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog"]',
                            'context': 'items:n_backlog',
                            'value_type': 3,
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_backlog\']',
                                    'error_handler': 1,
                                },
                            ],
                        },
                        {
                            'name': 'n_dropped (requests dropped due to backlog limit / sec)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_dropped"]',
                            'context': 'items:n_dropped',
                            'value_type': 0,
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_dropped\']',
                                    'error_handler': 1,
                                },
                                {
                                    'type': 10,
                                },
                            ],
                        },
                        {
                            'name': 'n_insert (VSL transactions in which a new object was inserted / sec)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_insert"]',
                            'context': 'items:n_insert',
                            'value_type': 0,
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_insert\']',
                                    'error_handler': 1,
                                },
                                {
                                    'type': 10,
                                },
                            ],
                        },
                        {
                            'name': 'n_req_failed (failed peer notifications / sec)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_failed"]',
                            'context': 'items:n_req_failed',
                            'value_type': 0,
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_req_failed\']',
                                    'error_handler': 1,
                                },
                                {
                                    'type': 10,
                                },
                            ],
                        },
                        {
                            'name': 'n_req_total (peer notifications / sec)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_total"]',
                            'context': 'items:n_req_total',
                            'value_type': 0,
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_req_total\']',
                                    'error_handler': 1,
                                },
                                {
                                    'type': 10,
                                },
                            ],
                        },
                        {
                            'name': 'n_trans (VSL transactions processed / sec)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_trans"]',
                            'context': 'items:n_trans',
                            'value_type': 0,
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_trans\']',
                                    'error_handler': 1,
                                },
                                {
                                    'type': 10,
                                },
                            ],
                        },
                        {
                            'name': 'uptime',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","uptime"]',
                            'context': 'items:uptime',
                            'value_type': 3,
                            'units': 'uptime',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.uptime\']',
                                    'error_handler': 1,
                                },
                            ],
                        },

                    ],
                    [
                        {
                            'name': 'has been restarted',
                            'expression':
                                '{Template App ' + name + ':vha_agent.stat["{#LOCATION_ID}","uptime"].max({$VHA_AGENT.LAST_VALUES_TO_CHECK:uptime})}'
                                '<{$VHA_AGENT.UPTIME.MIN}',
                            'priority': 4,
                        },
                        {
                            'name': 'is dropping requests',
                            'expression':
                                '{Template App ' + name + ':vha_agent.stat["{#LOCATION_ID}","n_dropped"].min({$VHA_AGENT.LAST_VALUES_TO_CHECK:n_dropped})}'
                                '>{$VHA_AGENT.N_DROPPED.MAX}',
                            'priority': 2,
                        },
                        {
                            'name': 'is failing to notify peers',
                            'expression':
                                '{Template App ' + name + ':vha_agent.stat["{#LOCATION_ID}","n_req_failed"].min({$VHA_AGENT.LAST_VALUES_TO_CHECK:n_req_failed})}'
                                '>{$VHA_AGENT.N_REQ_FAILED.MAX}',
                            'priority': 2,
                        },
                    ],
                    [
                        {
                            'name': 'Backlog length',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog"]',
                                },
                            ],
                        },
                        {
                            'name': 'Dropped requests',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_dropped"]',
                                },
                            ],
                        },
                        {
                            'name': 'Peer notifications',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_total"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_failed"]',
                                },
                            ],
                        },
                        {
                            'name': 'Transactions',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_trans"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_insert"]',
                                },
                            ],
                        },
                        {
                            'name': 'Uptime',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","uptime"]',
                                },
                            ],
                        },
                    ]) }}

                {#-#########################################################-#}
                {#- BACKLOGS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Backlogs discovery',
                        'key': 'vha_agent.discovery["{$VHA_AGENT.LOCATIONS}","backlogs"]',
                        'context': 'backlogs',
                    },
                    [
                        {
                            'name': 'n_backlog_{#SUBJECT} (length of the waiting list of requests for a neighbor)',
                            'type': 18,
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog_{#SUBJECT_ID}"]',
                            'context': 'backlogs:n_backlog',
                            'value_type': 3,
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 12,
                                    'params': '$[\'{#LOCATION_ID}.n_backlog_{#SUBJECT_ID}\']',
                                    'error_handler': 1,
                                },
                            ],
                        },
                    ],
                    [
                    ],
                    [
                        {
                            'name': 'Backlogs[{#SUBJECT}]: length',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog_{#SUBJECT_ID}"]',
                                },
                            ],
                        },
                    ]) }}
            </discovery_rules>

            {#-#############################################################-#}
            {#- MACROS -#}
            {#-#############################################################-#}

            <macros>
                {% for macro in [
                        ('{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD:stats}', '0'),
                        ('{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD}', '30d'),
                        ('{$VHA_AGENT.ITEM_TREND_STORAGE_PERIOD}', '365d'),
                        ('{$VHA_AGENT.ITEM_UPDATE_INTERVAL}', '60s'),
                        ('{$VHA_AGENT.LAST_VALUES_TO_CHECK}', '#1'),
                        ('{$VHA_AGENT.LAST_VALUES_TO_CHECK:n_dropped}', '#10'),
                        ('{$VHA_AGENT.LAST_VALUES_TO_CHECK:n_req_failed}', '#10'),
                        ('{$VHA_AGENT.LLD_KEEP_LOST_RESOURCES_PERIOD}', '30d'),
                        ('{$VHA_AGENT.LLD_UPDATE_INTERVAL}', '1h'),
                        ('{$VHA_AGENT.LOCATIONS}', ''),
                        ('{$VHA_AGENT.N_DROPPED.MAX}', '0.0'),
                        ('{$VHA_AGENT.N_REQ_FAILED.MAX}', '0.0'),
                        ('{$VHA_AGENT.PROCESSES.MIN}', '1'),
                        ('{$VHA_AGENT.UPTIME.MIN}', '10m'),
                    ] %}
                    <macro>
                        <macro>{{ macro[0]|e }}</macro>
                        <value>{{ macro[1]|e }}</value>
                    </macro>
                {% endfor %}
            </macros>
        </template>
    </templates>

    {#-#####################################################################-#}
    {#- TRIGGERS -#}
    {#-#####################################################################-#}

    <triggers>
        {% for trigger in [
                {
                    'name': 'VHA Agent is not running',
                    'expression':
                        '{Template App ' + name + ':proc.num[vha-agent].max({$VHA_AGENT.LAST_VALUES_TO_CHECK:proc.num-vha-agent})}'
                        '<{$VHA_AGENT.PROCESSES.MIN}',
                },
            ] %}
            <trigger>
                <expression>{{ trigger.expression|e }}</expression>
                <recovery_mode>0</recovery_mode>
                <recovery_expression/>
                <name>{{ trigger.name|e }}</name>
                <correlation_mode>0</correlation_mode>
                <correlation_tag/>
                <url/>
                <status>0</status>
                <priority>5</priority>
                <description/>
                <type>0</type>
                <manual_close>0</manual_close>
                <dependencies/>
                <tags/>
            </trigger>
        {% endfor %}
    </triggers>
</zabbix_export>
