{%- set name = name|default('VHA Agent') -%}

{%- set master = 'vha_agent.stats["{$VHA_AGENT.LOCATIONS}"]' -%}

{#-#########################################################################-#}
{#- MACROS -#}
{#-#########################################################################-#}

{%- macro item_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'TRAP': 2,
            'ZABBIX_ACTIVE': 7,
            'CALCULATED': 15,
            'DEPENDENT': 18,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro item_value_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'FLOAT': 0,
            'UNSIGNED': 3,
            'TEXT': 4,
            'DEPENDENT': 18,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro trigger_priority(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'WARNING': 2,
            'HIGH': 4,
            'DISASTER': 5,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro preprocessing_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'BOOL_TO_DECIMAL': 6,
            'CHANGE_PER_SECOND': 10,
            'JSONPATH': 12,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro preprocessing_error_handler(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'ORIGINAL_ERROR': 0,
            'DISCARD_VALUE': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'NORMAL': 0,
            'STACKED': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_item_drawtype(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'SINGLE_LINE': 0,
            'FILLED_REGION': 1,
            'BOLD_LINE': 2,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_item_yaxisside(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'LEFT': 0,
            'RIGHT': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_item_calc_fnc(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'MIN': 1,
            'AVG': 2,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro trigger(definition) -%}
    <expression>{{ definition.expression|e }}</expression>
    <name>{{ definition.name|e }}</name>
    <priority>{{ trigger_priority(definition.priority) }}</priority>
    {% if version in ('4.0', '4.2') %}
        <recovery_mode>0</recovery_mode>
        <recovery_expression/>
        <correlation_mode>0</correlation_mode>
        <correlation_tag/>
        <url/>
        <status>0</status>
        <description/>
        <type>0</type>
        <manual_close>0</manual_close>
        <dependencies/>
        <tags/>
    {% endif %}
{%- endmacro -%}

{%- macro discovery_rule(rule, items, triggers, graphs) -%}
    <discovery_rule>
        <name>{{ rule.name|e }}</name>
        <type>{{ item_type('ZABBIX_ACTIVE') }}</type>
        <key>{{ rule.key|e }}</key>
        <delay>{$VHA_AGENT.LLD_UPDATE_INTERVAL:{{ rule.context }}}</delay>
        <lifetime>{$VHA_AGENT.LLD_KEEP_LOST_RESOURCES_PERIOD:{{ rule.context }}}</lifetime>
        {% if version in ('4.0', '4.2') %}
            <snmp_community/>
            <snmp_oid/>
            <status>0</status>
            <allowed_hosts/>
            <snmpv3_contextname/>
            <snmpv3_securityname/>
            <snmpv3_securitylevel>0</snmpv3_securitylevel>
            <snmpv3_authprotocol>0</snmpv3_authprotocol>
            <snmpv3_authpassphrase/>
            <snmpv3_privprotocol>0</snmpv3_privprotocol>
            <snmpv3_privpassphrase/>
            <params/>
            <ipmi_sensor/>
            <authtype>0</authtype>
            <username/>
            <password/>
            <publickey/>
            <privatekey/>
            <port/>
            <filter>
                <evaltype>0</evaltype>
                <formula/>
                <conditions/>
            </filter>
            <description/>
            <host_prototypes/>
            <jmx_endpoint/>
            <timeout>3s</timeout>
            <url/>
            <query_fields/>
            <posts/>
            <status_codes>200</status_codes>
            <follow_redirects>1</follow_redirects>
            <post_type>0</post_type>
            <http_proxy/>
            <headers/>
            <retrieve_mode>0</retrieve_mode>
            <request_method>0</request_method>
            <allow_traps>0</allow_traps>
            <ssl_cert_file/>
            <ssl_key_file/>
            <ssl_key_password/>
            <verify_peer>0</verify_peer>
            <verify_host>0</verify_host>
        {% endif %}
        {% if version == '4.2' %}
            <lld_macro_paths/>
            <preprocessing/>
            <master_item/>
        {% endif %}
        <item_prototypes>
            {% for item in items %}
                <item_prototype>
                    <name>VHA Agent[{{ '{#' }}LOCATION}] - {{ item.name|e }}</name>
                    <type>{{ item_type(item.type) }}</type>
                    <key>{{ item.key|e }}</key>
                    {% if 'delay' in item and item.delay %}
                        <delay>{$VHA_AGENT.ITEM_UPDATE_INTERVAL:{{ item.context }}}</delay>
                    {% else %}
                        <delay>0</delay>
                    {% endif %}
                    <history>{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD:{{ item.context }}}</history>
                    {% if 'trends' in item and not item.trends %}
                        <trends>0</trends>
                    {% else %}
                        <trends>{$VHA_AGENT.ITEM_TREND_STORAGE_PERIOD:{{ item.context }}}</trends>
                    {% endif %}
                    <value_type>{{ item_value_type(item.value_type) }}</value_type>
                    <units>{{ item.units|default('')|e }}</units>
                    <params>{{ item.params|default('')|e }}</params>
                    <applications>
                        <application>
                            <name>VHA Agent</name>
                        </application>
                    </applications>
                    {% if 'master_item_key' in item %}
                        <master_item>
                            <key>{{ item.master_item_key|e }}</key>
                        </master_item>
                    {% elif version in ('4.0', '4.2') %}
                        <master_item/>
                    {% endif %}
                    {% if 'preprocessing' in item %}
                        <preprocessing>
                            {% for step in item.preprocessing %}
                                <step>
                                    <type>{{ preprocessing_type(step.type) }}</type>
                                    <params>{{ step.params|default('')|e }}</params>
                                    {% if version in ('4.2', '4.4') %}
                                        <error_handler>{{ preprocessing_error_handler(step.error_handler|default('ORIGINAL_ERROR')) }}</error_handler>
                                        <error_handler_params/>
                                    {% endif %}
                                </step>
                            {% endfor %}
                        </preprocessing>
                    {% elif version in ('4.0', '4.2') %}
                        <preprocessing/>
                    {% endif %}
                    {% if version in ('4.0', '4.2') %}
                        <snmp_community/>
                        <snmp_oid/>
                        <status>0</status>
                        <allowed_hosts/>
                        <snmpv3_contextname/>
                        <snmpv3_securityname/>
                        <snmpv3_securitylevel>0</snmpv3_securitylevel>
                        <snmpv3_authprotocol>0</snmpv3_authprotocol>
                        <snmpv3_authpassphrase/>
                        <snmpv3_privprotocol>0</snmpv3_privprotocol>
                        <snmpv3_privpassphrase/>
                        <ipmi_sensor/>
                        <authtype>0</authtype>
                        <username/>
                        <password/>
                        <publickey/>
                        <privatekey/>
                        <port/>
                        <description/>
                        <inventory_link>0</inventory_link>
                        <valuemap/>
                        <logtimefmt/>
                        <jmx_endpoint/>
                        <timeout>3s</timeout>
                        <url/>
                        <query_fields/>
                        <posts/>
                        <status_codes>200</status_codes>
                        <follow_redirects>1</follow_redirects>
                        <post_type>0</post_type>
                        <http_proxy/>
                        <headers/>
                        <retrieve_mode>0</retrieve_mode>
                        <request_method>0</request_method>
                        <output_format>0</output_format>
                        <allow_traps>0</allow_traps>
                        <ssl_cert_file/>
                        <ssl_key_file/>
                        <ssl_key_password/>
                        <verify_peer>0</verify_peer>
                        <verify_host>0</verify_host>
                        <application_prototypes/>
                    {% endif %}
                </item_prototype>
            {% endfor %}
        </item_prototypes>
        <trigger_prototypes>
            {% for definition in triggers %}
                <trigger_prototype>
                    {{ trigger(definition) }}
                </trigger_prototype>
            {% endfor %}
        </trigger_prototypes>
        <graph_prototypes>
            {% for graph in graphs %}
                <graph_prototype>
                    <name>VHA Agent[{{ '{#' }}LOCATION}] &gt; {{ graph.name|e }}</name>
                    <type>{{ graph_type(graph.type|default('NORMAL')) }}</type>
                    <graph_items>
                        {% for gitem in graph['items'] %}
                            <graph_item>
                                <sortorder>{{ loop.index0 }}</sortorder>
                                <drawtype>{{ graph_item_drawtype(gitem.drawtype|default('SINGLE_LINE')) }}</drawtype>
                                <color>{{ gitem.color }}</color>
                                <yaxisside>{{ graph_item_yaxisside(gitem.yaxisside|default('LEFT')) }}</yaxisside>
                                <calc_fnc>{{ graph_item_calc_fnc(gitem.calc_fnc|default('AVG')) }}</calc_fnc>
                                <item>
                                    <host>Template App {{ name }}</host>
                                    <key>{{ gitem.key|e }}</key>
                                </item>
                                {% if version in ('4.0', '4.2') %}
                                    <type>0</type>
                                {% endif %}
                            </graph_item>
                        {% endfor %}
                    </graph_items>
                    {% if version in ('4.0', '4.2') %}
                        <width>900</width>
                        <height>200</height>
                        <yaxismin>0.0000</yaxismin>
                        <yaxismax>100.0000</yaxismax>
                        <show_work_period>1</show_work_period>
                        <show_triggers>1</show_triggers>
                        <show_legend>1</show_legend>
                        <show_3d>0</show_3d>
                        <percent_left>0.0000</percent_left>
                        <percent_right>0.0000</percent_right>
                        <ymin_type_1>0</ymin_type_1>
                        <ymax_type_1>0</ymax_type_1>
                        <ymin_item_1>0</ymin_item_1>
                        <ymax_item_1>0</ymax_item_1>
                    {% endif %}
                </graph_prototype>
            {% endfor %}
        </graph_prototypes>
    </discovery_rule>
{%- endmacro -%}

{#-#########################################################################-#}
{#- TRIGGERS -#}
{#-#########################################################################-#}

{%- set vha_agent_processes_trigger =
    {
        'name': 'VHA Agent is not running',
        'expression':
            '{Template App ' + name + ':proc.num[vha-agent].max({$VHA_AGENT.LAST_VALUES_TO_CHECK:proc.num-vha-agent})}'
            '<{$VHA_AGENT.PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{#-#########################################################################-#}
{#- MAIN -#}
{#-#########################################################################-#}

<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>{{ version }}</version>
    <date>2018-10-26T13:42:30Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App {{ name }}</template>
            <name>Template App {{ name }}</name>
            {% if version in ('4.0', '4.2') %}
                <description/>
            {% endif %}
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>VHA Agent</name>
                </application>
            </applications>
            <templates/>
            <screens/>
            <httptests/>
            {% if version in ('4.2', '4.4') %}
                <tags>
                    <tag>
                        <tag>App</tag>
                        <value>VHA Agent</value>
                    </tag>
                </tags>
            {% endif %}

            {#-#############################################################-#}
            {#- ITEMS -#}
            {#-#############################################################-#}

            <items>
                {% for item in [
                        {
                            'name': 'stats',
                            'key': master,
                            'context': 'stats',
                            'trends': false,
                            'value_type': 'TEXT',
                            'triggers': [],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[vha-agent]',
                            'context': 'proc.num-vha-agent',
                            'value_type': 'UNSIGNED',
                            'triggers': [vha_agent_processes_trigger],
                        },
                    ] %}
                    <item>
                        <name>VHA Agent - {{ item.name|e }}</name>
                        <type>{{ item_type('ZABBIX_ACTIVE') }}</type>
                        <key>{{ item.key|e }}</key>
                        <delay>{$VHA_AGENT.ITEM_UPDATE_INTERVAL:{{ item.context }}}</delay>
                        <history>{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD:{{ item.context }}}</history>
                        {% if 'trends' in item and not item.trends %}
                            <trends>0</trends>
                        {% else %}
                            <trends>{$VHA_AGENT.ITEM_TREND_STORAGE_PERIOD:{{ item.context }}}</trends>
                        {% endif %}
                        <value_type>{{ item_value_type(item.value_type) }}</value_type>
                        <applications>
                            <application>
                                <name>VHA Agent</name>
                            </application>
                        </applications>
                        {% if version in ('4.0', '4.2') %}
                            <snmp_community/>
                            <snmp_oid/>
                            <status>0</status>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <timeout>3s</timeout>
                            <url/>
                            <query_fields/>
                            <posts/>
                            <status_codes>200</status_codes>
                            <follow_redirects>1</follow_redirects>
                            <post_type>0</post_type>
                            <http_proxy/>
                            <headers/>
                            <retrieve_mode>0</retrieve_mode>
                            <request_method>0</request_method>
                            <output_format>0</output_format>
                            <allow_traps>0</allow_traps>
                            <ssl_cert_file/>
                            <ssl_key_file/>
                            <ssl_key_password/>
                            <verify_peer>0</verify_peer>
                            <verify_host>0</verify_host>
                            <master_item/>
                        {% endif %}
                        {% if version == '4.4' and item.triggers %}
                            <triggers>
                                {% for definition in item.triggers %}
                                    <trigger>
                                        {{ trigger(definition) }}
                                    </trigger>
                                {% endfor %}
                            </triggers>
                        {% endif %}
                    </item>
                {% endfor %}
            </items>

            {#-#############################################################-#}
            {#- DISCOVERY RULES -#}
            {#-#############################################################-#}

            <discovery_rules>
                {#-#########################################################-#}
                {#- ITEMS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Items discovery',
                        'key': 'vha_agent.discovery["{$VHA_AGENT.LOCATIONS}","items"]',
                        'context': 'items',
                    },
                    [
                        {
                            'name': 'n_backlog (total length of all waiting lists of requests)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog"]',
                            'context': 'items:n_backlog',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_backlog\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'n_dropped (requests dropped due to backlog limit / sec)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_dropped"]',
                            'context': 'items:n_dropped',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_dropped\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'n_insert (VSL transactions in which a new object was inserted / sec)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_insert"]',
                            'context': 'items:n_insert',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_insert\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'n_req_failed (failed peer notifications / sec)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_failed"]',
                            'context': 'items:n_req_failed',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_req_failed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'n_req_total (peer notifications / sec)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_total"]',
                            'context': 'items:n_req_total',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_req_total\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'n_trans (VSL transactions processed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_trans"]',
                            'context': 'items:n_trans',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_trans\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'uptime',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","uptime"]',
                            'context': 'items:uptime',
                            'value_type': 'UNSIGNED',
                            'units': 'uptime',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.uptime\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },

                    ],
                    [
                        {
                            'name': 'VHA Agent[{#LOCATION}] has been restarted',
                            'expression':
                                '{Template App ' + name + ':vha_agent.stat["{#LOCATION_ID}","uptime"].max({$VHA_AGENT.LAST_VALUES_TO_CHECK:uptime})}'
                                '<{$VHA_AGENT.UPTIME.MIN}',
                            'priority': 'HIGH',
                        },
                        {
                            'name': 'VHA Agent[{#LOCATION}] is dropping requests',
                            'expression':
                                '{Template App ' + name + ':vha_agent.stat["{#LOCATION_ID}","n_dropped"].min({$VHA_AGENT.LAST_VALUES_TO_CHECK:n_dropped})}'
                                '>{$VHA_AGENT.N_DROPPED.MAX}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'VHA Agent[{#LOCATION}] is failing to notify peers',
                            'expression':
                                '{Template App ' + name + ':vha_agent.stat["{#LOCATION_ID}","n_req_failed"].min({$VHA_AGENT.LAST_VALUES_TO_CHECK:n_req_failed})}'
                                '>{$VHA_AGENT.N_REQ_FAILED.MAX}',
                            'priority': 'WARNING',
                        },
                    ],
                    [
                        {
                            'name': 'Backlog length',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog"]',
                                },
                            ],
                        },
                        {
                            'name': 'Dropped requests',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_dropped"]',
                                },
                            ],
                        },
                        {
                            'name': 'Peer notifications',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_total"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_req_failed"]',
                                },
                            ],
                        },
                        {
                            'name': 'Transactions',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_trans"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_insert"]',
                                },
                            ],
                        },
                        {
                            'name': 'Uptime',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","uptime"]',
                                },
                            ],
                        },
                    ]) }}

                {#-#########################################################-#}
                {#- BACKLOGS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Backlogs discovery',
                        'key': 'vha_agent.discovery["{$VHA_AGENT.LOCATIONS}","backlogs"]',
                        'context': 'backlogs',
                    },
                    [
                        {
                            'name': 'n_backlog_{#SUBJECT} (length of the waiting list of requests for a neighbor)',
                            'type': 'DEPENDENT',
                            'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog_{#SUBJECT_ID}"]',
                            'context': 'backlogs:n_backlog',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.n_backlog_{#SUBJECT_ID}\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                    ],
                    [
                    ],
                    [
                        {
                            'name': 'Backlogs[{#SUBJECT}]: length',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'vha_agent.stat["{#LOCATION_ID}","n_backlog_{#SUBJECT_ID}"]',
                                },
                            ],
                        },
                    ]) }}
            </discovery_rules>

            {#-#############################################################-#}
            {#- MACROS -#}
            {#-#############################################################-#}

            <macros>
                {% for macro in [
                        ('{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD:stats}', '0'),
                        ('{$VHA_AGENT.ITEM_HISTORY_STORAGE_PERIOD}', '30d'),
                        ('{$VHA_AGENT.ITEM_TREND_STORAGE_PERIOD}', '365d'),
                        ('{$VHA_AGENT.ITEM_UPDATE_INTERVAL}', '60s'),
                        ('{$VHA_AGENT.LAST_VALUES_TO_CHECK}', '#1'),
                        ('{$VHA_AGENT.LAST_VALUES_TO_CHECK:n_dropped}', '#10'),
                        ('{$VHA_AGENT.LAST_VALUES_TO_CHECK:n_req_failed}', '#10'),
                        ('{$VHA_AGENT.LLD_KEEP_LOST_RESOURCES_PERIOD}', '30d'),
                        ('{$VHA_AGENT.LLD_UPDATE_INTERVAL}', '1h'),
                        ('{$VHA_AGENT.LOCATIONS}', ''),
                        ('{$VHA_AGENT.N_DROPPED.MAX}', '0.0'),
                        ('{$VHA_AGENT.N_REQ_FAILED.MAX}', '0.0'),
                        ('{$VHA_AGENT.PROCESSES.MIN}', '1'),
                        ('{$VHA_AGENT.UPTIME.MIN}', '10m'),
                    ] %}
                    <macro>
                        <macro>{{ macro[0]|e }}</macro>
                        <value>{{ macro[1]|e }}</value>
                    </macro>
                {% endfor %}
            </macros>
        </template>
    </templates>

    {#-#####################################################################-#}
    {#- TRIGGERS -#}
    {#-#####################################################################-#}

    {% if version in ('4.0', '4.2') %}
        <triggers>
            {% for definition in [
                    vha_agent_processes_trigger,
                ] %}
                <trigger>
                    {{ trigger(definition) }}
                </trigger>
            {% endfor %}
        </triggers>
    {% endif %}
</zabbix_export>
